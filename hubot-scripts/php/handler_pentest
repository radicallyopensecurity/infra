#!/bin/bash 
SELF_PATH="$(dirname "$(readlink -f "$0")")"; cd $SELF_PATH;
TMPFILE="/tmp/.handler.$(whoami)"
DEBUG=1

TEMPLATE_REPO_LOCATION="~/defaultrepo"
GITLAB_CMD="/usr/local/bin/gitlab"
GITLAB_SSH_URL="ssh://git@webserver/ros"
GITLAB_HTTP_URL="https://webserver/ros"

LOCALREPOCOPIES="/opt/repositories"
ROBOTBASE="/opt/rosbot"

_log(){
  which logger &>/dev/null && logger -t hubot -p local3.notice "$*"; return 0
}


check_error(){
  [[ ! X"$(wc -c "$1" | cut -d" " -f1)" = X"0" ]] && {
    echo "please check the logs, the command was unsuccesfull :/"
    cat "$1" | while read line; do _log "$line"; done
  }
}


PDFLOC=`mktemp -d`
timestamp=$(date +"%Y-%m-%d_%H-%M-%S")

# Make sure that the temporary files are always removed
trap cleanup EXIT QUIT


cleanup() {
    trap '' EXIT INT QUIT
    [ -d $PDFLOC ] && rm -rf $PDFLOC
    exit
}


[[ $1 ]] && REPO=pen-${1,,} || REPO=FAIL
cd $TEMPLATE_REPO_LOCATION
git pull -q

cd $PDFLOC
echo "[+] setting up the new gitlabs repo "

if [ $REPO == "FAIL" ] ; then
	echo "Please tell me the name for the new repo"
	exit
fi

# test if it already exists
cd $LOCALREPOCOPIES
if [ -d off-$1 ]; then
   cd off-$1
   git pull -q
else
   git clone -q ssh://git@webserver/ros/off-$1.git 

fi

cd $LOCALREPOCOPIES
if [ -d $REPO ]; then
	echo "That repo already exists"
	exit

fi


$GITLAB_CMD project add $REPO --wiki --snippets --issues --wall --merge-requests -g 92 > /dev/null 

git clone -q ssh://git@webserver/ros/$REPO.git 

cd $REPO
cp -r $TEMPLATE_REPO_LOCATION/templates/xml/* .
rm -r doc &>/dev/null

# copy stuff we gathered in offerte phase, if any
cp ../off-$1/source/client_info.xml source/client_info.xml
cp ../off-$1/source/snippets/company_info.xml source/snippets/company_info.xml
cp ../off-$1/source/offerte.xml source/offerte.xml


# and generate a start of the pentest report with all we have so far 
java -jar $SAXONBASE/saxon9he.jar  -s:source/offerte.xml -xsl:xslt/off2rep.xsl -o:source/report.xml

echo "clone url:  $GITLAB_SSH_URL/$1.git" > README.md
cat $TEMPLATE_REPO_LOCATION/templates/xml/README.md >> README.md
git add *  > /dev/null
git config --global push.default simple
git commit -a -m 'automatic create by rosbot'  > /dev/null
git push -q > /dev/null
echo [+] visit $GITLAB_HTTP_URL/$REPO
echo " "
echo [+] or clone $GITLAB_SSH_URL/ros/$REPO.git

#lastly, install a webhook so everthing that happens in git is mentioned in channel
cd $ROBOTBASE/php/handlers/
/usr/bin/php -f $ROBOTBASE/php/handlers/webhook.php $REPO


exit 0
